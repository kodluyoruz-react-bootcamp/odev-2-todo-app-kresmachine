[{"C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\index.js":"1","C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\reportWebVitals.js":"2","C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\App.js":"3","C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\components\\TodoForm.js":"4","C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\components\\TodoList.js":"5","C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\components\\Footer.js":"6"},{"size":500,"mtime":1609150529587,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609150529587,"results":"9","hashOfConfig":"8"},{"size":1581,"mtime":1609274944628,"results":"10","hashOfConfig":"8"},{"size":541,"mtime":1609273063895,"results":"11","hashOfConfig":"8"},{"size":1102,"mtime":1609274483693,"results":"12","hashOfConfig":"8"},{"size":655,"mtime":1609271502973,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kevgxr",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\index.js",[],"C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\reportWebVitals.js",[],"C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\App.js",["28"],"import { useState, useEffect } from 'react';\nimport Footer from './components/Footer';\nimport TodoForm from './components/TodoForm'\nimport TodoList from './components/TodoList'\nfunction App() {\n  const [items, setItems] = useState([])\n  const [ticked, setTicked] = useState(false)\n  \n  useEffect(() => {\n    setItems(items.map(item => {\n      return { ...item, done: ticked };\n    }));\n  }, [ticked])\n\n  const handleDelete = (id) => {\n    const filtered = items.filter(item => item.id !== id)\n    setItems(filtered)\n  }\n\n  const handleToggle = (id) => {\n    const updated = items.map((item) => {\n      if (item.id === id) {\n        console.log(id)\n        item.done = !item.done\n      }\n      return item\n    })\n    console.log(updated);\n    setItems(updated)\n\n  }\n\n  const handleAddTodo = (text) => {\n    const todo = {\n      text: text,\n      id: Math.random(),\n      done: false\n    }\n    setItems([...items, todo])\n\n  }\n\n  const handleCheckAll = () => {\n    setTicked(!ticked)\n  }\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoForm handleAddTodo={handleAddTodo} />\n      </header>\n\n      <section className=\"main\">\n        <input className=\"toggle-all\" type=\"checkbox\" />\n        <label htmlFor=\"toggle-all\" onClick={handleCheckAll}>\n          Mark all as complete\n      </label>\n        <TodoList list={items} onDelete={handleDelete} onToggle={handleToggle} />\n\n      </section>\n      <Footer activeTodosCount={items.filter(item => item.done !== true).length} />\n\n    </section>\n  );\n}\n\nexport default App;\n","C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\components\\TodoForm.js",[],"C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\components\\TodoList.js",[],"C:\\Users\\HAMDIUGURYEDIVEREN\\Desktop\\odev-2\\src\\components\\Footer.js",["29","30","31"],"import React from 'react'\r\n\r\nfunction Footer({activeTodosCount}) {\r\n    return (\r\n        <footer className=\"footer\">\r\n  \r\n        <span className=\"todo-count\">\r\n          <strong>{activeTodosCount} </strong>\r\n          items left\r\n        </span>\r\n    \r\n        <ul className=\"filters\">\r\n          <li>\r\n            <a className=\"selected\">All</a>\r\n          </li>\r\n          <li>\r\n            <a>Active</a>\r\n          </li>\r\n          <li>\r\n            <a>Completed</a>\r\n          </li>\r\n        </ul>\r\n    \r\n        <button className=\"clear-completed\">\r\n          Clear completed\r\n        </button>\r\n      </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n",{"ruleId":"32","severity":1,"message":"33","line":13,"column":6,"nodeType":"34","endLine":13,"endColumn":14,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":14,"column":13,"nodeType":"38","endLine":14,"endColumn":37},{"ruleId":"36","severity":1,"message":"37","line":17,"column":13,"nodeType":"38","endLine":17,"endColumn":16},{"ruleId":"36","severity":1,"message":"37","line":20,"column":13,"nodeType":"38","endLine":20,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array. You can also do a functional update 'setItems(i => ...)' if you only need 'items' in the 'setItems' call.","ArrayExpression",["39"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"40","fix":"41"},"Update the dependencies array to be: [items, ticked]",{"range":"42","text":"43"},[391,399],"[items, ticked]"]